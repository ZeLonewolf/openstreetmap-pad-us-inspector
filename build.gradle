plugins {
	id 'eclipse'
	id 'application'
	id 'java'
}

repositories {
    mavenCentral()
    maven { url "http://jfgdb.s3-website-eu-west-1.amazonaws.com/maven2"}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

applicationDefaultJvmArgs = ["-Xmx3G"]

ext {
    jacksonVersion = '2.2.0'
}

dependencies {
  	//compile 'org.jfgdb:jfgdb:0.1.4'

	compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
}

jar {
	enabled=true
	status = 'snapshot'
}

application {
    mainClass = "com.streetferret.opus.OPUSInspect"
}

startScripts {
    // Support closures to add an additional element to
    // CLASSPATH definition in the start script files.
    def configureClasspathVar = { findClasspath, pathSeparator, line ->

        // Looking for the line that starts with either CLASSPATH=
        // or set CLASSPATH=, defined by the findClasspath closure argument.
        line = line.replaceAll(~/^${findClasspath}=.*$/) { original ->

            // Get original line and append it
            // with the configuration directory.
            // Use specified path separator, which is different
            // for Windows or Unix systems.
            original = original.replaceAll '%APP_HOME%\\\\', ''    
        }

    }

    def configureUnixClasspath = configureClasspathVar.curry('CLASSPATH', ':')
    def configureWindowsClasspath = configureClasspathVar.curry('set CLASSPATH', ';')

    // The default script content is generated and
    // with the doLast method we can still alter
    // the contents before the complete task ends.
    doLast {

        // Alter the start script for Unix systems.
        unixScript.text =
                unixScript
                        .readLines()
                        .collect(configureUnixClasspath)
                        .join('\n')

        // Alter the start script for Windows systems.
        windowsScript.text =
                windowsScript
                        .readLines()
                        .collect(configureWindowsClasspath)
                        .join('\r\n')

    }
}